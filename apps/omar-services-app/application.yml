---
serverProtocol: http  
serverName: localhost

server:
  port: 8081
  contextPath: /omar-services

grails:
  serverURL: ${serverProtocol}://${serverName}${server.contextPath}
  plugin:
    console:
      enabled: true
      csrfProtection:
          enabled: false

---
environments:
  development:
    dataSource:
        dbCreate: create-drop
        url: jdbc:postgresql:omardb-dev
  production:
    dataSource:
        dbCreate: update
        url: jdbc:postgresql:omardb-prod
    grails:
      dbconsole:
        enabled: true


---
environments:
  development:
    wfs:
      featureTypeNamespaces:
          - prefix: omar
            uri: http://omar.ossim.org
      datastores:
          - namespaceId: omar
            datastoreId: omardb-dev
            datastoreParams:
              dbtype: postgis
              host: localhost
              port: '5432'
              database: omardb-dev
              user: postgres
              passwd: postgres
              'Expose primary keys': 'true'
              namespace: http://omar.ossim.org
      featureTypes:
          - name: raster_entry
            title: raster_entry
            description: ''
            keywords:
              - omar
              - raster_entry
              - features
            datastoreId: omardb-dev
          - name: opir_raster_entry
            title: opir_raster_entry
            description: ''
            keywords:
              - omar
              - opir_raster_entry
              - features
            datastoreId: omardb-dev
          - name: video_data_set
            title: video_data_set
            description: ''
            keywords:
              - omar
              - video_data_set
              - features
            datastoreId: omardb-dev
  production:
    wfs:
      featureTypeNamespaces:
          - prefix: omar
            uri: http://omar.ossim.org
      datastores:
          - namespaceId: omar
            datastoreId: omardb-prod
            datastoreParams:
              dbtype: postgis
              host: localhost
              port: '5432'
              database: omardb-prod
              user: postgres
              passwd: postgres
              'Expose primary keys': 'true'
              namespace: http://omar.ossim.org
      featureTypes:
          - name: raster_entry
            title: raster_entry
            description: ''
            keywords:
              - omar
              - raster_entry
              - features
            datastoreId: omardb-prod
          - name: opir_raster_entry
            title: opir_raster_entry
            description: ''
            keywords:
              - omar
              - opir_raster_entry
              - features
            datastoreId: omardb-prod
          - name: video_data_set
            title: video_data_set
            description: ''
            keywords:
              - omar
              - video_data_set
              - features
            datastoreId: omardb-prod       
          - name: country_code
            title: country_code
            description: ''
            keywords:
              - omar
              - country_code
              - features
            datastoreId: omardb-prod                 
---
wms:
  styles:
      byFileType:
          mpeg:
            filter: filename like '%mpg'
            color:
              r: 164
              g: 254
              b: 255
              a: 255
          adrg:
            filter: file_type='adrg'
            color:
              r: 50
              g: 111
              b: 111
              a: 255
          aaigrid:
            filter: file_type='aaigrid'
            color: pink
          cadrg:
            filter: file_type='cadrg'
            color:
              r: 0
              g: 255
              b: 255
              a: 255
          ccf:
            filter: file_type='ccf'
            color:
              r: 128
              g: 100
              b: 255
              a: 255
          cib:
            filter: file_type='cib'
            color:
              r: 0
              g: 128
              b: 128
              a: 255
          doqq:
            filter: file_type='doqq'
            color: purple
          dted:
            filter: file_type='dted'
            color:
              r: 0
              g: 255
              b: 0
              a: 255
          imagine_hfa:
            filter: file_type='imagine_hfa'
            color:
              r: 211
              g: 211
              b: 211
              a: 255
          jpeg:
            filter: file_type='jpeg'
            color:
              r: 255
              g: 255
              b: 0
              a: 255
          jpeg2000:
            filter: file_type='jpeg2000'
            color:
              r: 255
              g: 200
              b: 0
              a: 255
          landsat7:
            filter: file_type='landsat7'
            color:
              r: 255
              g: 0
              b: 255
              a: 255
          mrsid:
            filter: file_type='mrsid'
            color:
              r: 0
              g: 188
              b: 0
              a: 255
          nitf:
            filter: file_type='nitf'
            color:
              r: 0
              g: 0
              b: 255
              a: 255
          tiff:
            filter: file_type='tiff'
            color:
              r: 255
              g: 0
              b: 0
              a: 255
          unspecified:
            filter: file_type='unspecified'
            color: white
      bySensorType:
          'ACES_YOGI-HRI1':
            filter: sensor_id in ('ACES_YOGI-HRI1', 'ACES_YOGI-HRI2', 'ACES_YOGI-HRI3')
            # red
            color:
              r: 255
              g: 0
              b: 0
              a: 255
          'ACES_YOGI-HSI':
            filter: sensor_id='ACES_YOGI-HSI'
            # yellow
            color:
              r: 255
              g: 255
              b: 0
              a: 255
          ALPHA:
            filter: sensor_id='ALPHA'
            # orange
            color:
              r: 255
              g: 165
              b: 0
              a: 255
          BRAVO:
            filter: sensor_id='BRAVO'
            # green
            color:
              r: 0
              g: 255
              b: 0
              a: 255
          CHARLIE:
            filter: sensor_id='CHARLIE'
            # cyan
            color:
              r: 0
              g: 255
              b: 255
              a: 255
          DELTA:
            filter: sensor_id='DELTA'
            # blue
            color:
              r: 0
              g: 0
              b: 255
              a: 255
          'HYCAS-HRI2':
            filter: sensor_id='HYCAS-HRI2'
            # magenta
            color:
              r: 255
              g: 0
              b: 255
              a: 255
          'HYCAS2011-HSI':
            filter: sensor_id='HYCAS2011-HSI'
            # pink
            color:
              r: 255
              g: 192
              b: 203
              a: 255
          unspecified:
            filter: sensor_id='unspecified'
            color:
              r: 255
              g: 255
              b: 255
              a: 255
      byVideoType:
          mpeg:
            filter: filename like '%mpg'
            color:
              r: 255
              g: 0
              b: 0
              a: 255
---
omar:
  wmts:
    wfsUrl: ${serverProtocol}://${serverName}/omar-wfs/wfs
    wmsUrl: ${serverProtocol}://${serverName}/omar-wms/wms
    legacyWmsFlag: false
    footprints:
      url: ${serverProtocol}://${serverName}/omar-geoscript/footprints/getFootprints
      layers: omar:raster_entry
      styles: byFileType
---
omar:
  jpip:
    server:
      cache: /data/omar/jpip_server/cache
      log:   /data/omar/jpip_server/log/omar-jpip-server-log.txt
      ip:    10.0.10.100
      url:   jpip://10.0.10.100:9000

quartz:
  jdbcStore: false

videoStreaming:
  videoServerDirRoot: /opt/local/www/apache2/html/videos
  videoServerUrlRoot: ${serverProtocol}://${serverName}/videos

######### Example for External logback config settings in YAML
# logging:
#   config: <log back config location>
spring:
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false


---
omar:
  oms:
    getRasterFilesUrl: ${serverProtocol}://${serverName}/omar-stager/dataManager/getRasterFiles
  wms:
    footprints:
      defaultMaxFeatures: 1000000
    oms:
      chipper:
        url: ${serverProtocol}://${serverName}/omar-oms/chipper
    userInfo:
      requestHeaderUserName: username
      requestHeaderUserNameDefault: "(null)"

  wfs:
    includeNumberMatched: false
    app:
      userInfo:
        requestHeaderUserName: username

---
omar:
  download:
    maxFiles: 10
    getRasterFilesUrl: ${serverProtocol}://${serverName}/omar-stager/dataManager/getRasterFiles

---
userInfo:
  requestHeaderUserName: username
  requestHeaderUserNameDefault: "(null)"

